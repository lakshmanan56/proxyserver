
Certainly! In .NET, you can create a simple proxy using HttpClient and ASP.NET Core. Here's a basic example:

Create a new ASP.NET Core project.

In your Startup.cs file, add the following code inside the ConfigureServices and Configure methods:

using Microsoft.AspNetCore.Builder;
using Microsoft.AspNetCore.Hosting;
using Microsoft.Extensions.Configuration;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.Hosting;
using System;
using System.Net.Http;
using System.Threading.Tasks;

namespace SimpleProxy
{
    public class Startup
    {
        public Startup(IConfiguration configuration)
        {
            Configuration = configuration;
        }

        public IConfiguration Configuration { get; }

        public void ConfigureServices(IServiceCollection services)
        {
            services.AddHttpClient();
            services.AddControllers();
        }

        public void Configure(IApplicationBuilder app, IWebHostEnvironment env)
        {
            if (env.IsDevelopment())
            {
                app.UseDeveloperExceptionPage();
            }

            app.UseRouting();

            app.UseEndpoints(endpoints =>
            {
                endpoints.MapControllers();
            });
        }
    }
}


Create a new controller for handling proxy requests. Add a new controller named ProxyController.cs:

using Microsoft.AspNetCore.Mvc;
using System.Net.Http;
using System.Threading.Tasks;

namespace SimpleProxy.Controllers
{
    [ApiController]
    [Route("[controller]")]
    public class ProxyController : ControllerBase
    {
        private readonly IHttpClientFactory _httpClientFactory;

        public ProxyController(IHttpClientFactory httpClientFactory)
        {
            _httpClientFactory = httpClientFactory;
        }

        [HttpGet]
        [HttpPost]
        [HttpPut]
        [HttpDelete]
        [Route("{**path}")]
        public async Task<IActionResult> Proxy(string path)
        {
            var targetUrl = "http://example.com/"; // Replace with your desired endpoint
            var targetEndpoint = $"{targetUrl}{path}";

            using (var httpClient = _httpClientFactory.CreateClient())
            {
                var request = new HttpRequestMessage(new HttpMethod(Request.Method), targetEndpoint)
                {
                    Content = new StreamContent(HttpContext.Request.Body)
                };

                var response = await httpClient.SendAsync(request);

                return new ContentResult
                {
                    StatusCode = (int)response.StatusCode,
                    Content = await response.Content.ReadAsStringAsync(),
                    ContentType = response.Content.Headers.ContentType?.ToString()
                };
            }
        }
    }
}


Run your ASP.NET Core application.
This example uses ASP.NET Core and HttpClient to create a simple proxy. Replace "http://example.com/" with the target URL you want to proxy requests to. Always handle input validation and implement security measures when creating a proxy server.